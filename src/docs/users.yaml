paths:
  /api/users:
    get:
      summary: Obtiene todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Lista de usuarios devuelta exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'

  /api/users/{uid}:
    get:
      summary: Obtener un usuario por ID
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
            example: "60c841a05c7f8a001c9c9b5d"
      responses:
        "200":
          description: Usuario encontrado exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    $ref: '#/components/schemas/User'
        "404":
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: User not found

    put:
      summary: Actualizar un usuario
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
            example: "60c841a05c7f8a001c9c9b5d"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: Maria
                last_name:
                  type: string
                  example: Gomez
      responses:
        "200":
          description: Usuario actualizado exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User updated
        "404":
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: User not found

    delete:
      summary: Eliminar un usuario
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
            example: "60c841a05c7f8a001c9c9b5d"
      responses:
        "200":
          description: Usuario eliminado exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User deleted
  /api/users/:uid/documents:
    post:
      summary: Agregar documentos al usuario
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
            example: "60c841a05c7f8a001c9c9b5d"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Nombre del documento
                    example: 123124141241-example.pdf
                  reference:
                    type: string
                    description: Direcci칩n donde se guarda el documento
                    example: D:\CoderHouse\backend-3\src\utils/../public/documents/1757902182103-ejemplo.pdf
      responses:
        "200":
          description: Usuario actualizado exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User updated
        "400":
          description: No hay ningun documento subido
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: No files uploaded
        "404":
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: User not found

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID del usuario generado por MongoDB.
          example: "60c841a05c7f8a001c9c9b5c"
        first_name:
          type: string
          description: Nombres del Usuario
          example: Juan
        last_name:
          type: string
          description: Apellidos del Usuario
          example: Perez
        email:
          type: string
          description: Correo Electronico del Usuario
          format: email
          example: juan.perez@example.com
        password:
          type: string
          description: Contrase침a encriptada del usuario.
          example: $2b$10$mz.0nbLvuMyP3.5ngHnrAuwiTY7mmtflN1jQ5BK11CEhMj/HiGu.s
        role:
          type: string
          description: Rol que tendra el usuario
          example: user
        pets:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
                description: ID de la mascota asociada.
                example: "60c841a05c7f8a001c9c9b5d"
        documents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Nombre asignado al documento
                example: 1757902182103-ejemplo.pdf
              reference:
                type: string
                description: Direcci칩n donde esta almacenado el Archivo
                example: D:\CoderHouse\backend-3\src\utils/../public/documents/1757902182103-ejemplo.pdf
              _id:
                type: string
                description: ID del documento.
                example: "68c775669fac5bfdb94f5ced"
        last_connection:
          type: string
          description: Fecha de la ultima conexi칩n o logout que tuvo el usuario
          example: 2022-24-52
